# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables

# Logo key
set $mod Mod4

set $left b
set $down n
set $up p
set $right f

set $editor emacsclient --create-frame --alternate-editor ""
set $shell emacsclient --create-frame --alternate-editor "" --eval "(hs/eshell-new)"
set $terminal emacsclient --create-frame --alternate-editor "" --eval "(multi-vterm)"

set $fileManager cosmic-files
set $menu fuzzel
set $browser librewolf
set $clipse kitty --class clipse -e zsh -c 'clipse'

### Autostart
exec systemctl --user start hyprpolkitagent
exec waybar
exec swaync
exec clipse -listen

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /home/hiram/Pictures/zenitsu.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output DP-1 resolution 3840x2160@240Hz
output DP-1 scale 1.5
output * adaptive_sync on

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard {
    xkb_layout us,us
    xkb_variant ,dvorak
    xkb_options grp:win_space_toggle,ctrl:nocaps
    xkb_numlock enabled
    repeat_rate 50
}

### Key bindings
#
# Basics:
#
    # Media keys
    bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
    bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+

    bindsym $mod+e exec $editor
    bindsym $mod+t exec $terminal
    bindsym $mod+Shift+t exec kitty
    bindsym $mod+s exec $shell

    bindsym $mod+r exec $menu
    bindsym $mod+w exec $browser
    bindsym $mod+v exec $clipse
    bindsym $mod+c exec killall -SIGUSR1 waybar
    bindsym $mod+m exec swaync-client -t -sw

    # Select an area to screenshot, save it to file, and copy it to the clipboard automatically.
    bindsym Print exec grim -g "$(slurp -d)" - | tee "$HOME/Pictures/Screenshots/$(date +%F_%T:%N).png" | wl-copy

    bindsym $mod+l exec swaylock
    bindsym $mod+k kill

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+k exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    bindsym $mod+KP_1 workspace number 1
    bindsym $mod+KP_2 workspace number 2
    bindsym $mod+KP_3 workspace number 3
    bindsym $mod+KP_4 workspace number 4
    bindsym $mod+KP_5 workspace number 5
    bindsym $mod+KP_6 workspace number 6
    bindsym $mod+KP_7 workspace number 7
    bindsym $mod+KP_8 workspace number 8
    bindsym $mod+KP_9 workspace number 9
    bindsym $mod+KP_0 workspace number 10

    bindsym $mod+KP_End    workspace number 1
    bindsym $mod+KP_Down   workspace number 2
    bindsym $mod+KP_Next   workspace number 3
    bindsym $mod+KP_Left   workspace number 4
    bindsym $mod+KP_Begin  workspace number 5
    bindsym $mod+KP_Right  workspace number 6
    bindsym $mod+KP_Home   workspace number 7
    bindsym $mod+KP_Up     workspace number 8
    bindsym $mod+KP_Prior  workspace number 9
    bindsym $mod+KP_Insert workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

    bindsym $mod+Shift+KP_1 move container to workspace number 1
    bindsym $mod+Shift+KP_2 move container to workspace number 2
    bindsym $mod+Shift+KP_3 move container to workspace number 3
    bindsym $mod+Shift+KP_4 move container to workspace number 4
    bindsym $mod+Shift+KP_5 move container to workspace number 5
    bindsym $mod+Shift+KP_6 move container to workspace number 6
    bindsym $mod+Shift+KP_7 move container to workspace number 7
    bindsym $mod+Shift+KP_8 move container to workspace number 8
    bindsym $mod+Shift+KP_9 move container to workspace number 9
    bindsym $mod+Shift+KP_0 move container to workspace number 10

    bindsym $mod+Shift+KP_End    move container to workspace number 1
    bindsym $mod+Shift+KP_Down   move container to workspace number 2
    bindsym $mod+Shift+KP_Next   move container to workspace number 3
    bindsym $mod+Shift+KP_Left   move container to workspace number 4
    bindsym $mod+Shift+KP_Begin  move container to workspace number 5
    bindsym $mod+Shift+KP_Right  move container to workspace number 6
    bindsym $mod+Shift+KP_Home   move container to workspace number 7
    bindsym $mod+Shift+KP_Up     move container to workspace number 8
    bindsym $mod+Shift+KP_Prior  move container to workspace number 9
    bindsym $mod+Shift+KP_Insert move container to workspace number 10

    # Org workspace
    bindsym $mod+o workspace org
    bindsym $mod+Shift+o move container to workspace org
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+h or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+Shift+h splith
    bindsym $mod+Shift+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+Apostrophe layout stacking
    bindsym $mod+Comma layout tabbed
    bindsym $mod+d layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+x fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+r mode "resize"

### Visual tweaks
default_border pixel

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*
